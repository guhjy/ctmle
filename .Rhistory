tauhathajek
tauhathajek_ctmle
library(stringr)
library(xtable)
library(MASS)
library(dplyr)
library(tmle)
library(doRNG)
library(doParallel)
library(ggplot2)
library(reshape2)
# setwd('~/Desktop/CTMLE-continue/PCORI/')
source('../ctmlelassopen/R/ctmle_lasso_pen_functions.R')
source('../ctmlelassopen/R/ctmle_lasso_pen.R')
source('../ctmlelassopen/R/ctmle_lasso_pen_res.R')
# source('../ctmlelassopen/R/ctmle_lasso_pen_sim.R')
library(glmnet)
k_lambda = 60
n <- 1000
partial <- 10
Rep = 500
registerDoParallel(20)
name <- 'nsaid'
data <- read.csv(paste('screened_', name,  '.csv', sep = ''))
A_full <- data[,1]
# 1 to 20 are baseline
W_full <- as.matrix(data[,3:dim(data)[2]])
set.seed(1992)
confounder_ind <- order(-cor(A_full, W_full))[1:40]
confounder_ind  <- confounder_ind[order(confounder_ind)]
Qbeta <- -abs(rnorm(length(confounder_ind))) * 0.38
Y_0 <- 2 + W_full[, confounder_ind ] %*% as.matrix(Qbeta) + 1 * 0
Y_1 <- 2 + W_full[, confounder_ind ] %*% as.matrix(Qbeta) + 1 * 1
Y_full <- 30 + W_full[, confounder_ind ] %*% as.matrix(Qbeta) + 1 * A_full
psi_true <- mean(Y_1 - Y_0)
psi_true
psi_naive <- mean(Y_full[A_full == 1]) - mean(Y_full[A_full == 0])
psi_naive
hist(Y_full)
N <- length(Y_full)
n
partial
ind <- sample(1:N, n, replace = FALSE)
Y <- Y_full[ind]
A <- A_full[ind]
W <- data.frame(W_full[ind, ])
W_base <- W[, 1:partial]
Y1<-Y[which(A==1)]
Y0<-Y[which(A==0)]
treated <- data.frame(cbind(Y1, W[which(A==1),confounder_ind[1:partial]]))
untreated <- data.frame(cbind(Y0, W[which(A==0),confounder_ind[1:partial]]))
#Initial Q-estimate
beta1hat<-predict(glm(Y1 ~., data = treated), newdata= W[,confounder_ind[1:partial]])
beta0hat<-predict(glm(Y0 ~., data = untreated), newdata= W[,confounder_ind[1:partial]])
Q<-matrix(c(beta0hat,beta1hat), ncol=2)
#Initial g-estimate
f1 <- eval(paste("A ~ ", paste(paste(names(W), sep=''), collapse=" + ")))
f2 <- as.formula(f1)
lassox<- model.matrix(f2, W)# [,-1]
lassoy<-as.factor(A)
g1Wbwcv<-cv.glmnet(x=lassox,y=lassoy,family="binomial")
lambdas<-g1Wbwcv$lambda
g1W<-predict.cv.glmnet(g1Wbwcv,newx=lassox,s="lambda.min",type="response")
g1W<-bound(g1W,c(0.025,0.975))
# Naive estimator
tauhatnaive <- mean(Y1)-mean(Y0)
tauhatnaive
# MLE
tauhatimp <- mean(beta1hat)-mean(beta0hat)
tauhatimp
# IPTW
tauhatiptw <- mean(A * Y /(g1W) - (1-A)*Y/(1- g1W))
# Hajek
pA <- mean(A)
tauhathajek <-mean(A *  pA * Y /(g1W))/ mean(A *  pA /g1W)-
mean((1-A)* (1-pA) * Y/(1- g1W)) / mean((1-A) * (1-pA)/(1-g1W))
# A-ITPW
tauhatdr <- mean(((A*Y)-(A-g1W) * beta1hat)/g1W)-
mean((((1-A)*Y)+(A-g1W)*beta0hat)/(1-g1W))
tauhatdr
#!!! SE for A-IPTW
DR_SE <- sqrt(var((((A*Y)-(A-g1W) * beta1hat)/g1W)-
((((1-A)*Y)+(A-g1W)*beta0hat)/(1-g1W)))/n)
DR_ci <-  tauhatdr + DR_SE  * c(-1.96, 1.96)
DR_ci
Qn <- ifelse(A, beta1hat, beta0hat)
mean( (A /(g1W) - (1-A)/(1- g1W)) * (Y - Qn)    ) +
mean(beta1hat - beta0hat)
# TMLE
tauhattmlemod <- tmle(Y=Y,A=A,W=data.frame(W=W),Q=Q,g1W=g1W)
tauhattmle <- tauhattmlemod$estimates$ATE$psi
tauhattmlemod$estimates$ATE$CI
# Matching
tauhatmatchmode <- Matching::Match(Y = Y, Tr = A, X = g1W, Z = W, ties=FALSE)
tauhatmatch <- tauhatmatchmode$est
################################################################
################################################################
# CTMLE
# Set for ctmle 1 and 2
gcv<-g1<-NULL
bws <-g1Wbwcv$lambda[(which(g1Wbwcv$lambda==g1Wbwcv$lambda.min)):length(g1Wbwcv$lambda)]
if(length(bws) > k_lambda){
bws <- bws[1:k_lambda]
}
# ! gn candidates for C-TMLE 0
# gn_candidates <- predict.cv.glmnet(g1Wbwcv,newx=lassox,s = bws,type="response")
tauhatctmlemod1 <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=gcv,bws = bws,ctmletype=1, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,
detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6, g1=g1)
tauhatctmlemod2 <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=gcv,bws=bws,ctmletype=2, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,  detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6, g1=g1)
tauhatctmle1 <-tauhatctmlemod1$est
tauhatctmle2 <-tauhatctmlemod2$est
bws <- g1Wbwcv$lambda.min
bwsj <- lambdas[which(lambdas==bws)-1]
if(length(bwsj)==0){bwsj<-bws+0.005}
g1 <- predict.cv.glmnet(g1Wbwcv,newx=lassox,s=bwsj,type="response")
gcv <- g1W
tauhatctmlemod3 <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=gcv,bws=bws,ctmletype=3, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,  detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6, g1=g1)
tauhatctmle3 <-tauhatctmlemod3$est
tauhatctmlemod3$CI
################################
# Direcly use the PS selected by C-TMLE 1:
bws_tmp <- g1Wbwcv$lambda[(which(g1Wbwcv$lambda==g1Wbwcv$lambda.min)):length(g1Wbwcv$lambda)]
lambda_best <- bws_tmp[tauhatctmlemod1$best_k]
bwsj_1 <- lambdas[which(lambdas==lambda_best)-1]
g_ctmle <- predict.cv.glmnet(g1Wbwcv,newx=lassox,
s=lambda_best,type="response")
g_ctmle <- bound(g_ctmle,c(0.025,0.975))
g_ctmle1 <- predict.cv.glmnet(g1Wbwcv,newx=lassox,
s= bwsj_1,type="response")
g_ctmle1 <- bound(g_ctmle1,c(0.025,0.975))
# IPTW
tauhatiptw_ctmle <- mean(A * Y /(g_ctmle) - (1-A)*Y/(1- g_ctmle))
tauhatiptw
tauhatiptw_ctmle
# Hajek
tauhathajek_ctmle <-mean(A *  pA * Y /(g_ctmle))/ mean(A *  pA /g_ctmle)-
mean((1-A)* (1-pA) * Y/(1- g_ctmle)) / mean((1-A) * (1-pA)/(1-g_ctmle))
tauhathajek
tauhathajek_ctmle
# A-ITPW
tauhatdr_ctmle <- mean(((A*Y)-(A-g_ctmle) * beta1hat)/g_ctmle)-
mean((((1-A)*Y)+(A-g_ctmle)*beta0hat)/(1-g_ctmle))
tauhatdr
tauhatdr_ctmle
#!!! SE for A-IPTW
DR_ctmle_SE <- sqrt(var((((A*Y)-(A-g_ctmle) * beta1hat)/g_ctmle)-
((((1-A)*Y)+(A-g_ctmle)*beta0hat)/(1-g_ctmle)))/n)
DR_ctmle_ci <- tauhatdr_ctmle + DR_ctmle_SE  * c(-1.96, 1.96)
DR_ctmle_ci
tauhattmlemod_ctmle <- tmle(Y=Y,A=A,W=data.frame(W=W),Q=Q,g1W=g_ctmle)
tauhattmle_ctmle  <- tauhattmlemod_ctmle$estimates$ATE$psi
tauhattmle
tauhattmle_ctmle
tauhatmatchmode_ctmle <- Matching::Match(Y = Y, Tr = A, X = g_ctmle, Z = W, ties=FALSE)
tauhatmatch_ctmle <- tauhatmatchmode$est
tauhatmatch
tauhatmatch_ctmle
tauhatctmlemod3_ctmle <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=g_ctmle,
bws=lambda_best,ctmletype=3, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,  detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6,
g1=g_ctmle1)
tauhatctmlemod3_ctmle
install.packages('Matching')
tauhatmatchmode_ctmle <- Matching::Match(Y = Y, Tr = A, X = g_ctmle, Z = W, ties=FALSE)
tauhatmatch_ctmle <- tauhatmatchmode$est
tauhatmatchmode <- Matching::Match(Y = Y, Tr = A, X = g1W, Z = W, ties=FALSE)
tauhatmatch <- tauhatmatchmode$est
tauhatmatch
gcv<-g1<-NULL
bws <-g1Wbwcv$lambda[(which(g1Wbwcv$lambda==g1Wbwcv$lambda.min)):length(g1Wbwcv$lambda)]
if(length(bws) > k_lambda){
bws <- bws[1:k_lambda]
}
tauhatctmlemod1 <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=gcv,bws = bws,ctmletype=1, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,
detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6, g1=g1)
tauhatctmlemod3 <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=gcv,bws=bws,ctmletype=3, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,  detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6, g1=g1)
gcv
g1 <- predict.cv.glmnet(g1Wbwcv,newx=lassox,s=bwsj,type="response")
gcv <- g1W
tauhatctmle1 <-tauhatctmlemod1$est
tauhatctmle2 <-tauhatctmlemod2$est
bws <- g1Wbwcv$lambda.min
bwsj <- lambdas[which(lambdas==bws)-1]
if(length(bwsj)==0){bwsj<-bws+0.005}
g1 <- predict.cv.glmnet(g1Wbwcv,newx=lassox,s=bwsj,type="response")
gcv <- g1W
gcv
g1
gcv
g1
tauhatctmlemod3 <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=gcv,bws=bws,ctmletype=3, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,  detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6, g1=g1)
tauhatctmle3 <-tauhatctmlemod3$est
tauhatctmlemod3$CI
bws_tmp <- g1Wbwcv$lambda[(which(g1Wbwcv$lambda==g1Wbwcv$lambda.min)):length(g1Wbwcv$lambda)]
lambda_best <- bws_tmp[tauhatctmlemod1$best_k]
bwsj_1 <- lambdas[which(lambdas==lambda_best)-1]
g_ctmle <- predict.cv.glmnet(g1Wbwcv,newx=lassox,
s=lambda_best,type="response")
g_ctmle <- bound(g_ctmle,c(0.025,0.975))
g_ctmle1 <- predict.cv.glmnet(g1Wbwcv,newx=lassox,
s= bwsj_1,type="response")
g_ctmle1 <- bound(g_ctmle1,c(0.025,0.975))
tauhatiptw_ctmle <- mean(A * Y /(g_ctmle) - (1-A)*Y/(1- g_ctmle))
tauhatiptw
tauhatiptw_ctmle
tauhathajek_ctmle <-mean(A *  pA * Y /(g_ctmle))/ mean(A *  pA /g_ctmle)-
mean((1-A)* (1-pA) * Y/(1- g_ctmle)) / mean((1-A) * (1-pA)/(1-g_ctmle))
tauhathajek
tauhathajek_ctmle
tauhatdr_ctmle <- mean(((A*Y)-(A-g_ctmle) * beta1hat)/g_ctmle)-
mean((((1-A)*Y)+(A-g_ctmle)*beta0hat)/(1-g_ctmle))
tauhatdr
tauhatdr_ctmle
tauhathajek_ctmle <-mean(A *  pA * Y /(g_ctmle))/ mean(A *  pA /g_ctmle)-
mean((1-A)* (1-pA) * Y/(1- g_ctmle)) / mean((1-A) * (1-pA)/(1-g_ctmle))
tauhathajek
tauhathajek_ctmle
tauhatdr_ctmle <- mean(((A*Y)-(A-g_ctmle) * beta1hat)/g_ctmle)-
mean((((1-A)*Y)+(A-g_ctmle)*beta0hat)/(1-g_ctmle))
tauhatdr
tauhatdr_ctmle
DR_ctmle_SE <- sqrt(var((((A*Y)-(A-g_ctmle) * beta1hat)/g_ctmle)-
((((1-A)*Y)+(A-g_ctmle)*beta0hat)/(1-g_ctmle)))/n)
DR_ctmle_ci <- tauhatdr_ctmle + DR_ctmle_SE  * c(-1.96, 1.96)
DR_ctmle_ci
tauhattmlemod_ctmle <- tmle(Y=Y,A=A,W=data.frame(W=W),Q=Q,g1W=g_ctmle)
tauhattmle_ctmle  <- tauhattmlemod_ctmle$estimates$ATE$psi
tauhattmle
tauhattmle_ctmle
tauhatmatchmode_ctmle <- Matching::Match(Y = Y, Tr = A, X = g_ctmle, Z = W, ties=FALSE)
tauhatmatch_ctmle <- tauhatmatchmode$est
tauhatmatch
tauhatmatch_ctmle
tauhatctmlemod3_ctmle <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=g_ctmle,
bws=lambda_best,ctmletype=3, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,  detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6,
g1=g_ctmle1)
tauhatctmlemod3_ctmle
tauhatctmlemod3_ctmle$est
tauhatctmlemod3_ctmle <- ctmle(Y=Y, A=A, W=data.frame(W=W), Wg=data.frame(W=W), Q=Q,
gcv=g_ctmle,
bws=lambda_best,ctmletype=3, alpha=.995,
family="gaussian",
gbound=0.025,like_type="loglik" ,
fluctuation="logistic", verbose=FALSE,  detailed=FALSE, PEN=FALSE,
V=5, stopFactor=10^6,
g1=g_ctmle1)
tauhatctmlemod3_ctmle$est
tauhats <- data.frame(Naive=tauhatnaive,
Imp=tauhatimp,
IPTW = tauhatiptw,
DR=tauhatdr,
TMLE=tauhattmle,
CTMLE1=tauhatctmle1,
CTMLE2=tauhatctmle2,
CTMLE3=tauhatctmle3,
IPTW_ctmle = tauhatiptw_ctmle,
DR_ctmle=tauhatdr_ctmle,
TMLE_ctmle = tauhattmle_ctmle,
CTMLE3_ctmle = tauhatctmlemod3_ctmle$est,
hajek = tauhathajek_ctmle,
hajek_ctmle = tauhathajek_ctmle,
PSM <- tauhatmatchmode$est,
PSM_ctmle <- tauhatmatchmode_ctmle$est
)
tauhats
hajek
tauhats <- data.frame(Naive=tauhatnaive,
Imp=tauhatimp,
IPTW = tauhatiptw,
DR=tauhatdr,
TMLE=tauhattmle,
CTMLE1=tauhatctmle1,
CTMLE2=tauhatctmle2,
CTMLE3=tauhatctmle3,
IPTW_ctmle = tauhatiptw_ctmle,
DR_ctmle=tauhatdr_ctmle,
TMLE_ctmle = tauhattmle_ctmle,
CTMLE3_ctmle = tauhatctmlemod3_ctmle$est,
PSM <- tauhatmatchmode$est,
PSM_ctmle <- tauhatmatchmode_ctmle$est,
hajek = tauhathajek_ctmle,
hajek_ctmle = tauhathajek_ctmle
)
tauhats
ind <- sample(1:N, n, replace = FALSE)
Y <- Y_full[ind]
A <- A_full[ind]
W <- data.frame(W_full[ind, ])
W_base <- W[, 1:partial]
Y1<-Y[which(A==1)]
Y0<-Y[which(A==0)]
treated <- data.frame(cbind(Y1, W[which(A==1),confounder_ind[1:partial]]))
untreated <- data.frame(cbind(Y0, W[which(A==0),confounder_ind[1:partial]]))
#Initial Q-estimate
beta1hat<-predict(glm(Y1 ~., data = treated), newdata= W[,confounder_ind[1:partial]])
beta0hat<-predict(glm(Y0 ~., data = untreated), newdata= W[,confounder_ind[1:partial]])
Q<-matrix(c(beta0hat,beta1hat), ncol=2)
#Initial g-estimate
f1 <- eval(paste("A ~ ", paste(paste(names(W), sep=''), collapse=" + ")))
f2 <- as.formula(f1)
lassox<- model.matrix(f2, W)# [,-1]
lassoy<-as.factor(A)
g1Wbwcv<-cv.glmnet(x=lassox,y=lassoy,family="binomial")
lambdas<-g1Wbwcv$lambda
g1W<-predict.cv.glmnet(g1Wbwcv,newx=lassox,s="lambda.min",type="response")
g1W<-bound(g1W,c(0.025,0.975))
# Naive estimator
tauhatnaive <- mean(Y1)-mean(Y0)
tauhatnaive
# MLE
tauhatimp <- mean(beta1hat)-mean(beta0hat)
tauhatimp
# IPTW
tauhatiptw <- mean(A * Y /(g1W) - (1-A)*Y/(1- g1W))
# Hajek
pA <- mean(A)
tauhathajek <-mean(A *  pA * Y /(g1W))/ mean(A *  pA /g1W)-
mean((1-A)* (1-pA) * Y/(1- g1W)) / mean((1-A) * (1-pA)/(1-g1W))
tauhathajek
ind <- sample(1:N, n, replace = FALSE)
Y <- Y_full[ind]
A <- A_full[ind]
W <- data.frame(W_full[ind, ])
W_base <- W[, 1:partial]
Y1<-Y[which(A==1)]
Y0<-Y[which(A==0)]
treated <- data.frame(cbind(Y1, W[which(A==1),confounder_ind[1:partial]]))
untreated <- data.frame(cbind(Y0, W[which(A==0),confounder_ind[1:partial]]))
#Initial Q-estimate
beta1hat<-predict(glm(Y1 ~., data = treated), newdata= W[,confounder_ind[1:partial]])
beta0hat<-predict(glm(Y0 ~., data = untreated), newdata= W[,confounder_ind[1:partial]])
Q<-matrix(c(beta0hat,beta1hat), ncol=2)
#Initial g-estimate
f1 <- eval(paste("A ~ ", paste(paste(names(W), sep=''), collapse=" + ")))
f2 <- as.formula(f1)
lassox<- model.matrix(f2, W)# [,-1]
lassoy<-as.factor(A)
g1Wbwcv<-cv.glmnet(x=lassox,y=lassoy,family="binomial")
lambdas<-g1Wbwcv$lambda
g1W<-predict.cv.glmnet(g1Wbwcv,newx=lassox,s="lambda.min",type="response")
g1W<-bound(g1W,c(0.025,0.975))
# Naive estimator
tauhatnaive <- mean(Y1)-mean(Y0)
tauhatnaive
# MLE
tauhatimp <- mean(beta1hat)-mean(beta0hat)
tauhatimp
# IPTW
tauhatiptw <- mean(A * Y /(g1W) - (1-A)*Y/(1- g1W))
# Hajek
pA <- mean(A)
tauhathajek <-mean(A *  pA * Y /(g1W))/ mean(A *  pA /g1W)-
mean((1-A)* (1-pA) * Y/(1- g1W)) / mean((1-A) * (1-pA)/(1-g1W))
tauhathajek
tauhathajek <- mean(A *  pA * Y /(g1W_raw))/ mean(A *  pA /g1W_raw)-
mean((1-A)* (1-pA) * Y/(1- g1W_raw)) / mean((1-A) * (1-pA)/(1-g1W_raw))
g1W_raw <-predict.cv.glmnet(g1Wbwcv,newx=lassox,s="lambda.min",type="response")
g1W<-bound(g1W_raw,c(0.025,0.975))
tauhathajek <- mean(A *  pA * Y /(g1W_raw))/ mean(A *  pA /g1W_raw)-
mean((1-A)* (1-pA) * Y/(1- g1W_raw)) / mean((1-A) * (1-pA)/(1-g1W_raw))
tauhathajek
tauhathajek_ctmle <-mean(A *  pA * Y /(g_ctmle))/ mean(A *  pA /g_ctmle)-
mean((1-A)* (1-pA) * Y/(1- g_ctmle)) / mean((1-A) * (1-pA)/(1-g_ctmle))
tauhathajek
tauhathajek_ctmle
bws_tmp <- g1Wbwcv$lambda[(which(g1Wbwcv$lambda==g1Wbwcv$lambda.min)):length(g1Wbwcv$lambda)]
lambda_best <- bws_tmp[tauhatctmlemod1$best_k]
bwsj_1 <- lambdas[which(lambdas==lambda_best)-1]
g_ctmle <- predict.cv.glmnet(g1Wbwcv,newx=lassox,
s=lambda_best,type="response")
g_ctmle <- bound(g_ctmle,c(0.025,0.975))
g_ctmle1 <- predict.cv.glmnet(g1Wbwcv,newx=lassox,
s= bwsj_1,type="response")
g_ctmle1 <- bound(g_ctmle1,c(0.025,0.975))
tauhatiptw_ctmle <- mean(A * Y /(g_ctmle) - (1-A)*Y/(1- g_ctmle))
tauhatiptw
tauhatiptw_ctmle
tauhathajek_ctmle <-mean(A *  pA * Y /(g_ctmle))/ mean(A *  pA /g_ctmle)-
mean((1-A)* (1-pA) * Y/(1- g_ctmle)) / mean((1-A) * (1-pA)/(1-g_ctmle))
tauhathajek
tauhathajek_ctmle
tauhatiptw
tauhatiptw_ctmle
tauhathajek_ctmle <-mean(A  * Y /(g_ctmle))/ mean(A  /g_ctmle)-
mean((1-A) * Y/(1- g_ctmle)) / mean((1-A) /(1-g_ctmle))
tauhathajek
tauhathajek_ctmle
tauhathajek <- mean(A *   Y /(g1W))/ mean(A  /g1W)-
mean((1-A) * Y/(1- g1W)) / mean((1-A) /(1-g1W))
tauhathajek
tauhathajek <- mean(A *  pA * Y /(g1W))/ mean(A *  pA /g1W)-
mean((1-A)* (1-pA) * Y/(1- g1W)) / mean((1-A) * (1-pA)/(1-g1W))
tauhathajek
tauhathajek <- mean(A *   Y /(g1W))/ mean(A  /g1W)-
mean((1-A) * Y/(1- g1W)) / mean((1-A) /(1-g1W))
tauhathajek
?glm
wsl1<-predict(glm(Y1 ~., data = treated, weights = g1W),
newdata= W[,confounder_ind[1:partial]])
wsl1<-predict(glm(Y1 ~., data = treated, weights = g1W[A]),
newdata= W[,confounder_ind[1:partial]])
wls0<-predict(glm(Y0 ~., data = untreated, weights = 1-g1W[1-A]),
newdata= W[,confounder_ind[1:partial]])
wsl1
wls0
tauhatwsl <- mean(wsl1 - wls0)
tauhatwsl
wsl1<-predict(glm(Y1 ~., data = treated, weights = 1/g1W[A]),
newdata= W[,confounder_ind[1:partial]])
wls0<-predict(glm(Y0 ~., data = untreated, weights = 1/(1-g1W[1-A])),
newdata= W[,confounder_ind[1:partial]])
tauhatwsl <- mean(wsl1 - wls0)
tauhatwsl
beta1hat<-predict(glm(Y1 ~., data = treated), newdata= W[,confounder_ind[1:partial]])
beta0hat<-predict(glm(Y0 ~., data = untreated), newdata= W[,confounder_ind[1:partial]])
tauhatimp <- mean(beta1hat)-mean(beta0hat)
tauhatimp
1/g1W[A]
wsl1<-predict(glm(Y1 ~., data = treated, weights = 1/g1W[A == 1]),
newdata= W[,confounder_ind[1:partial]])
wls0<-predict(glm(Y0 ~., data = untreated, weights = 1/(1-g1W[A == 0])),
newdata= W[,confounder_ind[1:partial]])
tauhatwsl <- mean(wsl1 - wls0)
tauhatwsl
wsl1_ctmle<-predict(glm(Y1 ~., data = treated, weights = 1/g_ctmle[A == 1]),
newdata= W[,confounder_ind[1:partial]])
wls0_ctmle<-predict(glm(Y0 ~., data = untreated, weights = 1/(1-g_ctmle[A == 0])),
newdata= W[,confounder_ind[1:partial]])
tauhatwsl_ctmle <- mean(wsl1_ctmle - wls0_ctmle)
tauhatwsl
tauhatwsl_ctmle
tauhats <- data.frame(Naive=tauhatnaive,
Imp=tauhatimp,
IPTW = tauhatiptw,
DR=tauhatdr,
TMLE=tauhattmle,
CTMLE1=tauhatctmle1,
CTMLE2=tauhatctmle2,
CTMLE3=tauhatctmle3,
IPTW_ctmle = tauhatiptw_ctmle,
DR_ctmle=tauhatdr_ctmle,
TMLE_ctmle = tauhattmle_ctmle,
CTMLE3_ctmle = tauhatctmlemod3_ctmle$est,
PSM <- tauhatmatchmode$est,
PSM_ctmle <- tauhatmatchmode_ctmle$est,
hajek = tauhathajek,
hajek_ctmle = tauhathajek_ctmle,
WSL = tauhatwsl,
WSL_ctmle = tauhatwsl_ctmle
)
tauhats
tauhats
tauhats <- data.frame(Naive=tauhatnaive,
Imp=tauhatimp,
IPTW = tauhatiptw,
DR=tauhatdr,
TMLE=tauhattmle,
CTMLE1=tauhatctmle1,
CTMLE2=tauhatctmle2,
CTMLE3=tauhatctmle3,
IPTW_ctmle = tauhatiptw_ctmle,
DR_ctmle=tauhatdr_ctmle,
TMLE_ctmle = tauhattmle_ctmle,
CTMLE3_ctmle = tauhatctmlemod3_ctmle$est,
PSM = tauhatmatchmode$est,
PSM_ctmle = tauhatmatchmode_ctmle$est,
hajek = tauhathajek,
hajek_ctmle = tauhathajek_ctmle,
WSL = tauhatwsl,
WSL_ctmle = tauhatwsl_ctmle
)
tauhats
devtools::release()
